#
# OMF2: omf2 prompt choose eastwood
# OMZ:  ZSH_THEME=eastwood
#

### OMZ
# source: https://github.com/ohmyzsh/ohmyzsh/blob/master/themes/eastwood.zsh-theme
#
# RVM settings
# if [[ -s ~/.rvm/scripts/rvm ]] ; then
#   RPS1="%{$fg[yellow]%}rvm:%{$reset_color%}%{$fg[red]%}\$(~/.rvm/bin/rvm-prompt)%{$reset_color%} $EPS1"
# else
#   if which rbenv &> /dev/null; then
#     RPS1="%{$fg[yellow]%}rbenv:%{$reset_color%}%{$fg[red]%}\$(rbenv version | sed -e 's/ (set.*$//')%{$reset_color%} $EPS1"
#   fi
# fi
#
# ZSH_THEME_GIT_PROMPT_PREFIX="%{$reset_color%}%{$fg[green]%}["
# ZSH_THEME_GIT_PROMPT_SUFFIX="]%{$reset_color%}"
# ZSH_THEME_GIT_PROMPT_DIRTY="%{$fg[red]%}*%{$reset_color%}"
# ZSH_THEME_GIT_PROMPT_CLEAN=""
#
# # Customized git status, oh-my-zsh currently does not allow render dirty status before branch
# git_custom_status() {
#   local cb=$(git_current_branch)
#   if [ -n "$cb" ]; then
#     echo "$(parse_git_dirty)$ZSH_THEME_GIT_PROMPT_PREFIX$(git_current_branch)$ZSH_THEME_GIT_PROMPT_SUFFIX"
#   fi
# }
#
# PROMPT='$(git_custom_status)%{$fg[cyan]%}[%~% ]%{$reset_color%}%B$%b '
###

add_newline = false

format = """${custom.git_status_dirty}${custom.git_prefix}$git_branch$git_commit${custom.git_suffix}${directory}${character}"""
right_format = "${python}${ruby}"

# Timeout for commands executed by starship (in milliseconds)
command_timeout=2000

[line_break]
disabled = true

[python]
format = '[(\($virtualenv\) )]($style)'
style = 'white'

[ruby]
format = '[$symbol($version )]($style)'
symbol = 'ðŸ’Ž'
style = 'red'

[directory]
format = '[(\[[$read_only]($read_only_style)$path\])]($style)'
style = "cyan"
truncation_length = 0
truncate_to_repo = false
truncation_symbol = ""

[git_branch]
format = '[$branch]($style)'
style = 'green'

[git_commit]
format = '[( $hash$tag)]($style)'
style = 'green'
only_detached = true

[custom.git_prefix]
when = 'git rev-parse --is-inside-work-tree 2> /dev/null'
symbol = "\\["
style = "green"
format = "[$symbol]($style)"
shell = ["sh"]

[custom.git_suffix]
when = 'git rev-parse --is-inside-work-tree 2> /dev/null'
symbol = "\\]"
style = "green"
format = "[$symbol]($style)"
shell = ["sh"]

[custom.git_status_dirty]
when = 'test -n "$(git status --porcelain 2>/dev/null)"'
symbol = "*"
style = "red"
format="[$symbol]($style)"
shell = ["sh"]

[character]
format = '$symbol '
success_symbol = "[\\$](bold)"
error_symbol = "[\\$](bold red)"
